events {
  worker_connections 512; # 동시 연결 수 설정
}

http {
  # 기본 타임아웃 설정
  proxy_connect_timeout ${PROXY_CONNECT_TIMEOUT}s;
  proxy_send_timeout ${PROXY_SEND_TIMEOUT}s;
  proxy_read_timeout ${PROXY_READ_TIMEOUT}s;
  # URL 기반 인증 검사 맵 설정
  map $request_uri $skip_auth_check {
    default 0;

    # 인증 검사가 필요 없는 경로들
    ~^/auth/login 1;
    ~^/auth/guest-token 1;
    ~^/auth/public 1;
    ~^/auth/health 1;
    ~^/member/health 1;

    # 추가 정적 리소스도 제외 가능
    ~^/static/ 1;
    ~^/favicon\.ico 1;
  }

  upstream kong_upstream {
    server kong:8000;
    # 필요하면 더 추가
  }

  server {
    listen 80;
    server_name localhost;

    # 인증 관련 경로 - 인증 체크 우회
    location ~ ^/api/auth/ {
        # 인증 관련 요청은 auth_request 검사 없이 처리
        proxy_pass http://kong:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API 요청 - 인증 체크 필요
    location /api/ {
      auth_request /auth_check;
      auth_request_set $auth_status $upstream_status;
      
      # 인증 성공 시 Kong API Gateway로 전달
      proxy_pass http://kong:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # 인증 헤더 처리
      auth_request_set $auth_user $upstream_http_x_auth_user;
      proxy_set_header X-Auth-User $auth_user;
    }

    # 인증 체크용 내부 요청
    location = /auth_check {
      internal;
      proxy_pass ${AUTH_SERVICE_URL}/auth/verify;
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-Method $request_method;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_connect_timeout ${AUTH_TIMEOUT}s;
    }

    # 프론트엔드 서비스 (Next.js)
    # shop 경로 정확히 매칭 (후행 슬래시 없는 경우)
    location = /shop {
      return 301 /shop/;
    }

    # shop 경로와 하위 경로 매칭
    location /shop/ {
      # 경로 리라이트
      rewrite ^/shop/?(.*)$ /$1 break;

      proxy_pass ${FRONTEND_URL};
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # 웹소켓 지원
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}