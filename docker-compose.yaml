services:
  db:
    image: postgres:16
    container_name: postgres
    env_file:
      - ./fastify-member-server/.env
    ports:
      - "5432:5432"
    # 확인하고 주석처리
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
  fastify-member-server:
    build:
      context: ./fastify-member-server
      dockerfile: Dockerfile
      args:
        - RUN npm install --omit=dev && npm run build
    container_name: fastify-member-server
    env_file:
      - ./fastify-member-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  koa-auth-server:
    build: ./koa-auth-server
    container_name: koa-auth-server
    env_file:
      - ./koa-auth-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  ecommerce-app:
    build: ./ecommerce-app
    container_name: ecommerce-app
    env_file:
      - ./ecommerce-app/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  kong:
    image: kong:3.6
    container_name: kong
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml:ro
    networks:
      - app-network
    ports:
      - "8001:8001"
    # 확인하고 주석 처리
  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - kong
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app-network

# This docker-compose file sets up a multi-container application with PostgreSQL, Fastify, Koa, and Nginx.
# docker-compose -p rehabilitation-treatment up --build
# docker-compose -p rehabilitation-treatment up --build -d
