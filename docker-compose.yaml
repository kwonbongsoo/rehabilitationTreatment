services:
  db:
    image: postgres:16
    container_name: postgres
    env_file:
      - ./fastify-member-server/.env
    # ports:
    #   - "5432:5432"
    # 확인하고 주석처리
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  fastify-member-server:
    build:
      context: .
      dockerfile: ./fastify-member-server/Dockerfile
      args:
        - RUN npm install --omit=dev && npm run build
    container_name: fastify-member-server
    env_file:
      - ./fastify-member-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  koa-auth-server:
    build:
      context: .
      dockerfile: ./koa-auth-server/Dockerfile
    container_name: koa-auth-server
    env_file:
      - ./koa-auth-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  bff-server:
    build:
      context: .
      dockerfile: ./bff-server/Dockerfile
    container_name: bff-server
    env_file:
      - ./bff-server/.env
    depends_on:
      - koa-auth-server
      - fastify-member-server
    restart: unless-stopped
    networks:
      - app-network

  # Bun Proxy Server
  proxy-server:
    build:
      context: .
      dockerfile: ./proxy-server/Dockerfile
    container_name: proxy-server
    env_file:
      - ./proxy-server/.env
    environment:
      - NEXT_SERVER=http://ecommerce-app:3000
    ports:
      - '9000:9000'
    depends_on:
      - ecommerce-app
    restart: unless-stopped
    networks:
      - app-network

  ecommerce-app:
    build:
      context: .
      dockerfile: ./ecommerce-app/Dockerfile
    container_name: ecommerce-app
    env_file:
      - ./ecommerce-app/.env
    # 외부 포트 제거 - 프록시를 통해서만 접근
    ports:
      - '3000:3000'
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network
  # Kong API Gateway
  kong:
    image: kong:3.9
    container_name: kong
    env_file:
      - ./kong/.env
    volumes:
      - ./kong/kong.yml.template:/tmp/kong.yml.template:ro
      - ./kong/init-kong.sh:/tmp/init-kong-source.sh:ro
      - ./kong/plugins:/usr/local/share/lua/5.1/kong/plugins
    command: >
      /bin/sh -c "
        cp /tmp/init-kong-source.sh /tmp/init-kong.sh &&
        chmod +x /tmp/init-kong.sh &&
        /tmp/init-kong.sh &&
        kong start"
    networks:
      - app-network

  # Kong Warm-up Service
  kong-warmup:
    image: curlimages/curl:latest
    container_name: kong-warmup
    depends_on:
      - kong
      - bff-server
    volumes:
      - ./warm-up.sh:/warm-up.sh:ro
    env_file:
      - ./kong/.env
    environment:
      - KONG_GATEWAY_URL=http://kong:8000
    command: /bin/sh /warm-up.sh
    networks:
      - app-network
    restart: "no"

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app-network
      # This docker-compose file sets up a multi-container application with PostgreSQL, Fastify, Koa, and Nginx.
      # docker-compose -p rehabilitation-treatment up --build
      # docker-compose -p rehabilitation-treatment up --build -d
