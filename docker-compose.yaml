services:
  db:
    image: postgres:16
    container_name: postgres
    env_file:
      - ./fastify-member-server/.env
    # ports:
    #   - "5432:5432"
    # 확인하고 주석처리
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  fastify-member-server:
    build:
      context: ./fastify-member-server
      dockerfile: Dockerfile
      args:
        - RUN npm install --omit=dev && npm run build
    container_name: fastify-member-server
    env_file:
      - ./fastify-member-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  koa-auth-server:
    build: ./koa-auth-server
    container_name: koa-auth-server
    env_file:
      - ./koa-auth-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  ecommerce-app:
    build: ./ecommerce-app
    container_name: ecommerce-app
    env_file:
      - ./ecommerce-app/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network
  # Kong API Gateway
  kong:
    image: kong:3.6
    container_name: kong
    env_file:
      - ./kong/.env
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: /tmp/kong.yml
      KONG_PLUGINS: idempotency
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_LUA_PACKAGE_PATH: /usr/local/share/lua/5.1/?.lua;;
    volumes:
      - ./kong/kong.yml.template:/tmp/kong.yml.template:ro
      - ./kong/plugins:/usr/local/share/lua/5.1/kong/plugins
    command: >
      /bin/sh -c "
        sed 's/\$${REDIS_URL}/'"$$REDIS_URL"'/g; s/\$${REDIS_PORT}/'"$$REDIS_PORT"'/g; s/\$${REDIS_PASSWORD}/'"$$REDIS_PASSWORD"'/g; s/\$${REDIS_DB}/'"$$REDIS_DB"'/g; s/\$${IDEMPOTENCY_TTL}/'"$$IDEMPOTENCY_TTL"'/g' /tmp/kong.yml.template > /tmp/kong.yml &&
        kong start --run-migrations"
    networks:
      - app-network
    ports:
      - "8000:8000"
      - "8001:8001"

  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    env_file:
      - ./nginx/.env
    command: >
      /bin/sh -c "envsubst '$$MEMBER_SERVICE_URL $$MEMBER_TIMEOUT $$AUTH_TIMEOUT $$FRONTEND_URL $$PROXY_CONNECT_TIMEOUT $$PROXY_READ_TIMEOUT $$PROXY_SEND_TIMEOUT $$FRONTEND_TIMEOUT' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - kong
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app-network
      # This docker-compose file sets up a multi-container application with PostgreSQL, Fastify, Koa, and Nginx.
      # docker-compose -p rehabilitation-treatment up --build
      # docker-compose -p rehabilitation-treatment up --build -d
