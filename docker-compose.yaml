services:
  db:
    image: postgres:16
    container_name: postgres
    env_file:
      - ./fastify-member-server/.env
    # ports:
    #   - "5432:5432"
    # 확인하고 주석처리
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  fastify-member-server:
    build:
      context: .
      dockerfile: ./fastify-member-server/Dockerfile
      args:
        - RUN npm install --omit=dev && npm run build
    container_name: fastify-member-server
    env_file:
      - ./fastify-member-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  koa-auth-server:
    build:
      context: .
      dockerfile: ./koa-auth-server/Dockerfile
    container_name: koa-auth-server
    env_file:
      - ./koa-auth-server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  ecommerce-app:
    build:
      context: .
      dockerfile: ./ecommerce-app/Dockerfile
    container_name: ecommerce-app
    env_file:
      - ./ecommerce-app/.env
    # ports:
    #   - "3000:3000" # 임시 테스트용
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network
  # Kong API Gateway
  kong:
    image: kong:3.6
    container_name: kong
    env_file:
      - ./kong/.env
    volumes:
      - ./kong/kong.yml.template:/tmp/kong.yml.template:ro
      - ./kong/init-kong.sh:/tmp/init-kong-source.sh:ro
      - ./kong/plugins:/usr/local/share/lua/5.1/kong/plugins
    command: >
      /bin/sh -c "
        cp /tmp/init-kong-source.sh /tmp/init-kong.sh &&
        chmod +x /tmp/init-kong.sh &&
        /tmp/init-kong.sh &&
        kong start"
    networks:
      - app-network
    ports:
      - "8000:8000"
      - "8001:8001"

  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./nginx/init-nginx.sh:/tmp/init-nginx-source.sh:ro
    env_file:
      - ./nginx/.env
    command: >
      /bin/sh -c "
        cp /tmp/init-nginx-source.sh /tmp/init-nginx.sh &&
        chmod +x /tmp/init-nginx.sh &&
        /tmp/init-nginx.sh &&
        nginx -g 'daemon off;'"
    depends_on:
      - kong
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app-network
      # This docker-compose file sets up a multi-container application with PostgreSQL, Fastify, Koa, and Nginx.
      # docker-compose -p rehabilitation-treatment up --build
      # docker-compose -p rehabilitation-treatment up --build -d
